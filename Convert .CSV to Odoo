import csv

def generar_id_unico():
    # Generar un ID único. Aquí simplemente usamos un contador.
    # En un contexto real, tal vez querrías una solución más robusta.
    id_unico = 1
    while True:
        yield id_unico
        id_unico += 1

generador_id = generar_id_unico()

def transformar_actor(actor):
    # Transformar actores a la cadena requerida para Odoo
    actores = actor.split('-')
    refs_actores = [f"ref('{a}')" for a in actores]
    return f"[(6,0,[{', '.join(refs_actores)}])]"

def transformar_csv_a_odoo(csv_file, output_file):
    with open(csv_file, 'r', encoding='utf-8') as f:
        reader = csv.DictReader(f)
        with open(output_file, 'w', encoding='utf-8') as out:
            for row in reader:
                id_unico = next(generador_id)
                record = f"""
                <record id="film_{id_unico}" model="videoclub.peliculas">
                  <field name="name">{row['name']}</field>
                  <field name="director" ref="{row['director']}" />
                  <field name="actors" eval="{transformar_actor(row['actors'])}" />
                  <field name="release">{row['release']}</field>
                  <field name="country">{row['country']}</field>
                  <field name="duration">{row['duration']}</field>
                  <field name="rating">{row['rating']}</field>
                  <field file="{row['file']}" name="cover" type="base64" />
                </record>
                """
                out.write(record)

# Ruta del archivo CSV de entrada y del archivo de salida
archivo_csv = 'peliculas.csv'
archivo_salida = 'peliculas_odoo.xml'

# Transformar CSV a formato Odoo
transformar_csv_a_odoo(archivo_csv, archivo_salida)
